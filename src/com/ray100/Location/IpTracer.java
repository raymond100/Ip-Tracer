/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.ray100.Location;

import com.ray100.analysis.location.mode.ServerLocation;
import com.ray100.logger.Logger;
import com.teamdev.jxbrowser.chromium.Browser;
import com.teamdev.jxbrowser.chromium.swing.BrowserView;
import java.awt.BorderLayout;
import static java.awt.event.KeyEvent.VK_ENTER;
import java.net.InetAddress;
import java.net.MalformedURLException;
import java.net.URISyntaxException;
import java.net.URL;
import java.net.UnknownHostException;
import java.util.logging.Level;
import java.util.regex.Pattern;
import javax.swing.JOptionPane;
import mainPoject.Main;

/**
 *
 * @author ray100
 */
public class IpTracer extends javax.swing.JFrame {

    private final Browser browser = new Browser();
    private String currentIp = "";
    private GetLocation obj;
    private ServerLocation location;

    /**
     * Creates new form StateFinder
     */
    public IpTracer() {
        initComponents();
        new Logger();
        addMap();
      
        try (
                java.util.Scanner s = new java.util.Scanner(new java.net.URL("https://api.ipify.org/").openStream(), "UTF-8").useDelimiter("\\A")) {
            currentIp = s.next();
            currentPosition();
        } catch (java.io.IOException e) {
            JOptionPane.showMessageDialog(IpTracer.this, "Check your internet connection.", "Error", JOptionPane.WARNING_MESSAGE);
        }

    }

    //Method
    private void currentPosition() {
        obj = new GetLocation();
        location = obj.getLocation(currentIp);
        //System.out.println(location);
        String latitude = obj.getLocation(currentIp).getLatitude();
        String longitude = obj.getLocation(currentIp).getLongitude();
        String location = " var myLatlng = new google.maps.LatLng("
                + latitude + ", " + longitude + ");"
                + " var marker = new google.maps.Marker({"
                + "    position: myLatlng,"
                + "    map: map,"
                + "    title: 'IP Location!'});"
                + " map.setCenter(myLatlng);"
                + "map.setZoom(12)";

        browser.executeJavaScript(location);
        ipCountry.setText(obj.getLocation(currentIp).getCountryName() + " (" + obj.getLocation(currentIp).getCountryCode() + ")");
        ipCity.setText(obj.getLocation(currentIp).getCity());
        
        if (obj.getLocation(currentIp).getRegionName() != null) {
            ipState.setText(obj.getLocation(currentIp).getRegionName() + " (" + obj.getLocation(currentIp).getRegion() + ")");
        } else {
            ipState.setText("");
        }

        ipCodePostal.setText(obj.getLocation(currentIp).getPostalCode());
        ipLatitude.setText(obj.getLocation(currentIp).getLatitude());
        ipLongitude.setText(obj.getLocation(currentIp).getLongitude());
        ipTextfield.setText(currentIp);
    }

    
    
    private void addMap() {
        BrowserView browserView = new BrowserView(browser);
        map_panel.add(browserView, BorderLayout.CENTER);
        browser.loadURL("C:\\Users\\Ray100\\Desktop\\FinalProject\\src\\mainPoject\\map.html");
        this.setLocationRelativeTo(null);
    }

    
    //That's a regex for ip address valid
    private static final Pattern PATTERN = Pattern.compile(
            "^(([01]?\\d\\d?|2[0-4]\\d|25[0-5])\\.){3}([01]?\\d\\d?|2[0-4]\\d|25[0-5])$");

    
    //Check if the ip address is valid
    public static boolean validate(final String ip) {
        return PATTERN.matcher(ip).matches();
    }

    
    //Check if the URL is valid
    public static boolean isValidURL(String urlString) {
        try {
            URL url = new URL(urlString);
            url.toURI();
            return true;
        } catch (MalformedURLException | URISyntaxException exception) {
            return false;
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        map_panel = new javax.swing.JPanel();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();
        searchButton = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        ipTextfield = new javax.swing.JTextField();
        jSeparator4 = new javax.swing.JSeparator();
        jLabel6 = new javax.swing.JLabel();
        jSeparator5 = new javax.swing.JSeparator();
        jLabel7 = new javax.swing.JLabel();
        ipCountry = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        ipCity = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        ipState = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        ipCodePostal = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        ipLatitude = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        ipLongitude = new javax.swing.JLabel();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jMenuItem1 = new javax.swing.JMenuItem();
        closeMenuItem = new javax.swing.JMenuItem();
        jMenu2 = new javax.swing.JMenu();
        contentsMenuItem = new javax.swing.JMenuItem();
        aboutMunuItem = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setResizable(false);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        map_panel.setBackground(new java.awt.Color(255, 255, 255));
        map_panel.setMaximumSize(new java.awt.Dimension(760, 370));
        map_panel.setMinimumSize(new java.awt.Dimension(760, 370));
        map_panel.setLayout(new java.awt.BorderLayout());
        getContentPane().add(map_panel, new org.netbeans.lib.awtextra.AbsoluteConstraints(280, -1, 800, 540));

        jPanel1.setBackground(new java.awt.Color(51, 51, 51));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setFont(new java.awt.Font("Stencil", 0, 24)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("IP Tracer");
        jPanel1.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 40, 170, 30));

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("Find Location");
        jPanel1.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 120, -1, -1));
        jPanel1.add(jSeparator1, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 140, 240, 10));

        searchButton.setBackground(new java.awt.Color(102, 102, 102));
        searchButton.setText("Find");
        searchButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchButtonActionPerformed(evt);
            }
        });
        jPanel1.add(searchButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 210, -1, -1));

        jLabel5.setForeground(new java.awt.Color(255, 255, 255));
        jLabel5.setText("IP Address");
        jPanel1.add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 170, -1, -1));

        ipTextfield.setBackground(new java.awt.Color(51, 51, 51));
        ipTextfield.setForeground(new java.awt.Color(255, 255, 255));
        ipTextfield.setBorder(null);
        ipTextfield.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                ipTextfieldKeyTyped(evt);
            }
        });
        jPanel1.add(ipTextfield, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 170, 130, 20));
        jPanel1.add(jSeparator4, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 190, 130, 10));

        jLabel6.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(255, 255, 255));
        jLabel6.setText("IP Location Tracked by Ip Tracer");
        jPanel1.add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 300, 200, -1));
        jPanel1.add(jSeparator5, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 320, 200, -1));

        jLabel7.setForeground(new java.awt.Color(255, 255, 255));
        jLabel7.setText("IP Country:");
        jPanel1.add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 350, -1, -1));

        ipCountry.setForeground(new java.awt.Color(255, 255, 255));
        jPanel1.add(ipCountry, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 350, 150, -1));

        jLabel8.setForeground(new java.awt.Color(255, 255, 255));
        jLabel8.setText("IP City:");
        jPanel1.add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 380, -1, -1));

        ipCity.setForeground(new java.awt.Color(255, 255, 255));
        jPanel1.add(ipCity, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 380, 150, -1));

        jLabel9.setForeground(new java.awt.Color(255, 255, 255));
        jLabel9.setText("IP State:");
        jPanel1.add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 410, -1, -1));

        ipState.setForeground(new java.awt.Color(255, 255, 255));
        jPanel1.add(ipState, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 410, 150, -1));

        jLabel10.setForeground(new java.awt.Color(255, 255, 255));
        jLabel10.setText("IP Code Postal:");
        jPanel1.add(jLabel10, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 440, -1, -1));

        ipCodePostal.setForeground(new java.awt.Color(255, 255, 255));
        jPanel1.add(ipCodePostal, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 440, 150, -1));

        jLabel11.setForeground(new java.awt.Color(255, 255, 255));
        jLabel11.setText("IP Latitude:");
        jPanel1.add(jLabel11, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 470, -1, -1));

        ipLatitude.setForeground(new java.awt.Color(255, 255, 255));
        jPanel1.add(ipLatitude, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 470, 150, -1));

        jLabel13.setForeground(new java.awt.Color(255, 255, 255));
        jLabel13.setText("IP Longitude:");
        jPanel1.add(jLabel13, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 500, -1, -1));

        ipLongitude.setForeground(new java.awt.Color(255, 255, 255));
        jPanel1.add(ipLongitude, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 500, 150, -1));

        getContentPane().add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 280, 540));

        jMenu1.setText("File");

        jMenuItem1.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_F5, 0));
        jMenuItem1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/ray100/Location/refresh.jpg"))); // NOI18N
        jMenuItem1.setText("Refresh");
        jMenuItem1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem1ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem1);

        closeMenuItem.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_C, java.awt.event.InputEvent.CTRL_MASK));
        closeMenuItem.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/ray100/Location/close.png"))); // NOI18N
        closeMenuItem.setText("Close");
        closeMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                closeMenuItemActionPerformed(evt);
            }
        });
        jMenu1.add(closeMenuItem);

        jMenuBar1.add(jMenu1);

        jMenu2.setText("Help");

        contentsMenuItem.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/ray100/Location/inter.png"))); // NOI18N
        contentsMenuItem.setText("Contents...");
        contentsMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                contentsMenuItemActionPerformed(evt);
            }
        });
        jMenu2.add(contentsMenuItem);

        aboutMunuItem.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/ray100/Location/info.png"))); // NOI18N
        aboutMunuItem.setText("About IP Tracer...");
        aboutMunuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                aboutMunuItemActionPerformed(evt);
            }
        });
        jMenu2.add(aboutMunuItem);

        jMenuBar1.add(jMenu2);

        setJMenuBar(jMenuBar1);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void ipTextfieldKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_ipTextfieldKeyTyped
        // TODO add your handling code here:
        //charFiltre(evt);
        if (evt.getKeyChar() == VK_ENTER) {
              find();                     
         }
    }//GEN-LAST:event_ipTextfieldKeyTyped

    
    public void find(){
             if (ipTextfield.getText().isEmpty()) {
            JOptionPane.showMessageDialog(IpTracer.this, "Input an IP address or URL.", "Warning", JOptionPane.WARNING_MESSAGE);
        } else {
            if (validate(ipTextfield.getText())) {
                currentIp = ipTextfield.getText();
                currentPosition();
            } else {
                if (isValidURL(ipTextfield.getText())) {
                    try {
                        InetAddress address = InetAddress.getByName(new URL(ipTextfield.getText()).getHost());
                        System.out.println(address.getHostAddress());
                        currentIp = address.getHostAddress();
                        currentPosition();
                    } catch (MalformedURLException | UnknownHostException | NullPointerException ex) {
                        JOptionPane.showMessageDialog(IpTracer.this, "URL Error.", "Error", JOptionPane.WARNING_MESSAGE);
                    }

                } else {
                    JOptionPane.showMessageDialog(IpTracer.this, "IP address Invalid.", "Error", JOptionPane.WARNING_MESSAGE);
                }
            }

        }
    }
    private void searchButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchButtonActionPerformed
        // TODO add your handling code here:
        find();
   


    }//GEN-LAST:event_searchButtonActionPerformed

    private void aboutMunuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_aboutMunuItemActionPerformed
        // TODO add your handling code here:
        String infoIpTracer = "";
        infoIpTracer += "Program IP Tracer Graphical User Interface Version 1.0.0\n"
                + "         Mai 2017 Ray Corporation (Java SE)\n"
                + "Copyright 2017 Ray Corporation and/or its affiliates. All rights reserved.";

        JOptionPane.showMessageDialog(IpTracer.this, infoIpTracer, "IP Tracer - About", JOptionPane.INFORMATION_MESSAGE);
    }//GEN-LAST:event_aboutMunuItemActionPerformed

    private void closeMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_closeMenuItemActionPerformed
        // TODO add your handling code here:
        System.exit(0);
    }//GEN-LAST:event_closeMenuItemActionPerformed

    private void jMenuItem1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem1ActionPerformed
        // TODO add your handling code here:
         try (
                java.util.Scanner s = new java.util.Scanner(new java.net.URL("https://api.ipify.org/").openStream(), "UTF-8").useDelimiter("\\A")) {
            currentIp = s.next();
            currentPosition();
        } catch (java.io.IOException e) {
            JOptionPane.showMessageDialog(IpTracer.this, "Check your internet connection.", "Error", JOptionPane.WARNING_MESSAGE);
        }
    }//GEN-LAST:event_jMenuItem1ActionPerformed

    private void contentsMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_contentsMenuItemActionPerformed
        // TODO add your handling code here:
        String content = "<html><h2>Welcome to IP Tracer</h2></br>"
                + "<h3>Guide</h3></br>"
                + "<p>Ip Tracer is easy to use.</p></br>"
                + "<p>The launch of the program displays the location of your IP address.\n" +
                  "You can then draw an address either through the address Ip herme or a url</p>"
                + "</html>";
        
        JOptionPane.showMessageDialog(IpTracer.this, content,"Information",JOptionPane.INFORMATION_MESSAGE);
    }//GEN-LAST:event_contentsMenuItemActionPerformed

    //Filtre the input of the Ip texfield 
    private void charFiltre(java.awt.event.KeyEvent evt) {
        char c = evt.getKeyChar();

        if (c >= '0' && c <= '9' || c == '.') {
        } else {
            evt.consume();
        }
    }

    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenuItem aboutMunuItem;
    private javax.swing.JMenuItem closeMenuItem;
    private javax.swing.JMenuItem contentsMenuItem;
    private javax.swing.JLabel ipCity;
    private javax.swing.JLabel ipCodePostal;
    private javax.swing.JLabel ipCountry;
    private javax.swing.JLabel ipLatitude;
    private javax.swing.JLabel ipLongitude;
    private javax.swing.JLabel ipState;
    private javax.swing.JTextField ipTextfield;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator4;
    private javax.swing.JSeparator jSeparator5;
    private javax.swing.JPanel map_panel;
    private javax.swing.JButton searchButton;
    // End of variables declaration//GEN-END:variables
}
